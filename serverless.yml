org: 'greenherbdesigns'
service: 'ai-etsy'
app: 'ai-etsy-app'
frameworkVersion: '3'
useDotenv: true

plugins:
  - serverless-plugin-typescript
  - serverless-offline

custom:
  apiGatewayCaching:
    enabled: true

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: nodejs20.x
  region: eu-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:ListObjectsV2
        - s3:GetObject
        - s3:DeleteObject
      Resource:
        - arn:aws:s3:::generated-images-ai-etsy/*

  environment:
    NODE_OPTIONS: '--enable-source-maps'
    CONFIG_REGION: ${self:provider.region}
    OPENAI_API_KEY: ${param:OPENAI_API_KEY, env:OPENAI_API_KEY}

functions:
  generateImages:
    name: generate-images-${self:provider.stage}
    handler: ./src/handlers/generate/index.handler
    events:
      - schedule:
          name: generate-images-schedule-${self:provider.stage}
          description: 'Generate the images at midnight'
          rate: cron(00 00 * * ? *)
          enabled: false

resources:
  Resources:
    GeneratedImagesBucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        BucketName: generated-images-ai-etsy

    GeneratedImagesBucketPolicy:
      Type: 'AWS::S3::BucketPolicy'
      Properties:
        Bucket: generated-images-ai-etsy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Action:
                - 's3:ListBucket'
              Resource: 'arn:aws:s3:::generated-images-ai-etsy'
              Principal:
                AWS:
                  - Fn::GetAtt: [IamRoleLambdaExecution, Arn]
            - Effect: 'Allow'
              Action:
                - 's3:GetObject'
                - 's3:DeleteObject'
              Resource: 'arn:aws:s3:::generated-images-ai-etsy/*'
              Principal:
                AWS:
                  - Fn::GetAtt: [IamRoleLambdaExecution, Arn]
